{
  "hash": "db4e71a56e0435048f943c68cb05941c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Qualitative approach to topology generators\nauthors:\n  - name: Tanya Strydom\n    id: ts\n    orcid: 0000-0001-6067-1349\ndate: last-modified\nbibliography: ../references.bib\n---\n\n\n\n\n## Venn Diagram\n\nHere we will use the standard [REF FOR TIDYVERSE] and @gaoGgVennDiagramIntuitiveEasytoUse2021 to create a venn diagram for the quantitative portion of or generator/model overview process. Also remember to drop the R version (maybe also look into if you can `renv` this because we aim for reproducibility)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| output: false\n#| message: false\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| output: false\n#| message: false\nlibrary(ggVennDiagram)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'ggVennDiagram'\n\nThe following object is masked from 'package:tidyr':\n\n    unite\n```\n\n\n:::\n:::\n\n\n\n\n\nFirst we need to create the df with the relevant 'traits' for each model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n\nx <- list(Niche=c(\"species agnostic\", \"structural\", \"synthetic network\"),\n          ADBM=c(\"node-level\", \"mechanistic\"),\n          Transfer=c(\"node-level\", \"embedding\", \"metaweb\"),\n          PFIM=c(\"node-level\", \"mechanistic\", \"metaweb\"),\n          Cascade=c(\"species agnostic\", \"structural\", \"synthetic network\"))\n\nvenn <- Venn(x)\ndata <- process_data(venn)\n```\n:::\n\n\n\n\nCreate venn diagram:\n\n\n\n\n::: {#cell-fig-venn .cell}\n\n```{.r .cell-code .hidden}\n#| echo: false\n#| label: fig-venn\n#| fig-cap: \"Venn diagram for qualitative analysis/overview of the fancy maths things\"\n#| fig-alt: \"TODO\"\nggVennDiagram(x, \n              label = \"none\") +\n  theme_void() +\n  theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![Venn diagram for qualitative analysis/overview of the fancy maths things](model_qualitative_files/figure-jats/fig-venn-1.png){#fig-venn fig-alt='TODO'}\n:::\n:::\n\n\n\n\nLooking at it now I don't think this is the wayTM and trying to sort of 'ordinate' modelling space might actually be more meaningful... Specifically thinking here that I need to also actually just read about model comparison (but without the performance aspect)\n\n## Multivariate approach\n\nSo at least according to @mccuneAnalysisEcologicalCommunities2002 we should be able to ordinate using only categorical data although we should stick to an NMDS. Its just going to be a case of encoding said categories correctly. How I see it is that each category that we 'create' will be its own entry (we could maybe also just turn each category into a factor but this comes at the cost of assuming the distribution of said variable, well at least that's what I infer form my 2 minute skim read).\n\nI think what we should do is turn what is Table 1 in the manuscript into a 'wide table' that we can 'simply' throw into an NMDS to see what it throws out. Although I think we do need to think what would be deemed the /multivariate space of network generating models'...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(vegan)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: permute\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThis is vegan 2.6-4\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nset.seed(66) # because star wars\n\ncommunity_matrix =  \n  tribble(\n    ~Trait, ~Random, ~Cascade, ~Niche, ~ADBM, ~embedding,\n    \"structural\", 1, 1, 1, 0, 0,\n    \"mechanistic\", 0, 0, 0, 1, 0,\n    \"embedding\", 0, 0, 0, 0, 1,\n    \"network\", 1, 1, 1, 1, 0,\n    \"metaweb\", 0, 0, 0, 0, 1,\n    \"species_agnostic\", 1, 1, 1, 0, 0,\n    \"energetics\", 0, 0, 0, 1, 0,\n    \"evolutionary\", 0, 0, 0, 0, 1,\n    \"binary\", 1, 1, 1, 0, 0,\n    \"quantitative\", 0, 0, 0, 1, 0,\n    \"probabilistic\", 0, 0, 0, 0, 1)  %>% \n    column_to_rownames('Trait')\n\nnmds=metaMDS(community_matrix,\n              k=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRun 0 stress 6.055762e-17 \nRun 1 stress 0 \n... New best solution\n... Procrustes: rmse 0.1648533  max resid 0.2711284 \nRun 2 stress 0 \n... Procrustes: rmse 0.2415503  max resid 0.3789344 \nRun 3 stress 0 \n... Procrustes: rmse 0.2222631  max resid 0.3377932 \nRun 4 stress 0 \n... Procrustes: rmse 0.1834411  max resid 0.2788241 \nRun 5 stress 0 \n... Procrustes: rmse 0.1086419  max resid 0.1874339 \nRun 6 stress 0 \n... Procrustes: rmse 0.1874631  max resid 0.2719791 \nRun 7 stress 0.06335697 \nRun 8 stress 0 \n... Procrustes: rmse 0.2387256  max resid 0.3380424 \nRun 9 stress 0 \n... Procrustes: rmse 0.07659501  max resid 0.1385462 \nRun 10 stress 0 \n... Procrustes: rmse 0.1670454  max resid 0.2483204 \nRun 11 stress 8.123983e-05 \n... Procrustes: rmse 0.1041446  max resid 0.1326098 \nRun 12 stress 0.07124327 \nRun 13 stress 7.796157e-05 \n... Procrustes: rmse 0.1459716  max resid 0.1945881 \nRun 14 stress 0 \n... Procrustes: rmse 0.217524  max resid 0.3558596 \nRun 15 stress 0.07437737 \nRun 16 stress 7.027019e-05 \n... Procrustes: rmse 0.1626957  max resid 0.2609984 \nRun 17 stress 0 \n... Procrustes: rmse 0.1011174  max resid 0.198959 \nRun 18 stress 0 \n... Procrustes: rmse 0.07338361  max resid 0.1263504 \nRun 19 stress 0 \n... Procrustes: rmse 0.236487  max resid 0.391489 \nRun 20 stress 0 \n... Procrustes: rmse 0.2439364  max resid 0.365209 \n*** Best solution was not repeated -- monoMDS stopping criteria:\n     3: no. of iterations >= maxit\n    17: stress < smin\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in metaMDS(community_matrix, k = 2): stress is (nearly) zero: you may\nhave insufficient data\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndata.scores = as.data.frame(scores(nmds)$sites)\ndata.species = as.data.frame(scores(nmds)$species)\n```\n:::\n\n::: {#cell-fig-nmds .cell}\n\n```{.r .cell-code .hidden}\n#| echo: false\n#| label: fig-nmds\n#| fig-cap: \"NMDS of things\"\n\nggplot() + \n    geom_point(data = data.scores, \n               aes(x = NMDS1, \n                   y = NMDS2),\n               size = 3,\n               colour = \"black\") + \n    geom_text(data = data.species, \n               aes(label = row.names(data.species),\n                   x = NMDS1, \n                   y = NMDS2),\n               colour = \"red\") + \n    labs(x = \"NMDS1\", y = \"NMDS2\") +\n    theme_classic()\n```\n\n::: {.cell-output-display}\n![NMDS of things](model_qualitative_files/figure-jats/fig-nmds-1.png){#fig-nmds}\n:::\n:::\n\n\n\n\n## References {.unnumbered}\n\n::: {#refs}\n:::",
    "supporting": [
      "model_qualitative_files/figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}